prowjob_namespace: prow
pod_namespace: test-pods
log_level: debug

# Sinker configurations (for cleanup)
sinker:
  resync_period: 1m
  max_prowjob_age: 4h
  max_pod_age: 30m
  terminated_pod_ttl: 2h

plank:
  job_url_prefix_config:
    "*": https://prow.apps.test.metal3.io/view/
  report_templates:
    "*": >-
      [Full PR test history](https://prow.apps.test.metal3.io/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}).
      [Your PR dashboard](https://prow.apps.test.metal3.io/pr?query=is:pr+state:open+author:{{with
      index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).
  default_decoration_configs:
    "*":
      gcs_configuration:
        bucket: s3://prow-logs
        path_strategy: explicit
      s3_credentials_secret: s3-credentials
      utility_images:
        clonerefs: gcr.io/k8s-prow/clonerefs:v20231011-33fbc60185
        entrypoint: gcr.io/k8s-prow/entrypoint:v20231011-33fbc60185
        initupload: gcr.io/k8s-prow/initupload:v20231011-33fbc60185
        sidecar: gcr.io/k8s-prow/sidecar:v20231011-33fbc60185
      resources:
        clonerefs:
          requests:
            cpu: 10m
            memory: 10Mi
        initupload:
          requests:
            cpu: 10m
            memory: 10Mi
        place_entrypoint:
          requests:
            cpu: 10m
            memory: 10Mi
        sidecar:
          requests:
            cpu: 10m
            memory: 10Mi

tide:
  merge_method:
    metal3-io: merge
    Nordix/metal3-dev-tools: rebase
    Nordix/metal3-clusterapi-docs: rebase
    Nordix/sles-ironic-python-agent-builder: rebase
  queries:
    - repos:
        - metal3-io/.github
        - metal3-io/baremetal-operator
        - metal3-io/cluster-api-provider-metal3
        - metal3-io/community
        - metal3-io/ironic-client
        - metal3-io/ironic-hardware-inventory-recorder-image
        - metal3-io/ironic-image
        - metal3-io/ironic-agent-image
        - metal3-io/ironic-ipa-downloader
        - metal3-io/mariadb-image
        - metal3-io/metal3-dev-env
        - metal3-io/metal3-docs
        - metal3-io/metal3-io.github.io
        - metal3-io/project-infra
        - metal3-io/ip-address-manager
        - metal3-io/utility-images
        - Nordix/metal3-dev-tools
        - Nordix/metal3-clusterapi-docs
        - Nordix/sles-ironic-python-agent-builder
      labels:
        - lgtm
        - approved
      missingLabels:
        - needs-rebase
        - do-not-merge
        - do-not-merge/hold
        - do-not-merge/invalid-owners-file
        - do-not-merge/work-in-progress
  context_options:
    # Use branch protection options to define required and optional contexts
    from-branch-protection: true

#
# Use prow to manage the configuration of github branch protection.
# This is what controls which github status checks (or CI jobs) must
# be passing for a PR to merge.
#
# Docs: https://github.com/kubernetes/test-infra/tree/master/prow/cmd/branchprotector
#
branch-protection:
  orgs:
    Nordix:
      # Require "always_run: true" jobs to pass before merging.
      # To turn this off for a given job, set "optional: true"
      # in the job definition.
      protect: true
      repos:
        metal3-dev-tools:
          # Use this to specify that a status coming from outside of prow is
          # required.  We use this to require functional jobs running in
          # jenkins are required, for example.
          branches:
            main:
              required_status_checks:
                contexts:
                  [
                    "test-integration-metal3-dev-tools-centos",
                    "test-integration-metal3-dev-tools-ubuntu",
                  ]
        sles-ironic-python-agent-builder:
          branches:
            main:
              required_status_checks:
                contexts: []
            sles-15-sp4:
              required_status_checks:
                contexts: []
    metal3-io:
      # Require "always_run: true" jobs to pass before merging.
      # To turn this off for a given job, set "optional: true"
      # in the job definition.
      protect: true
      repos:
        baremetal-operator:
          # Use this to specify that a status coming from outside of prow is
          # required.  We use this to require functional jobs running in
          # jenkins are required, for example.
          branches:
            main:
              required_status_checks:
                contexts:
                  [
                    "test-centos-e2e-integration-main",
                    "test-ubuntu-integration-main",
                  ]
        cluster-api-provider-metal3:
          branches:
            main:
              required_status_checks:
                contexts:
                  [
                    "test-centos-e2e-integration-main",
                    "test-ubuntu-integration-main",
                  ]
            release-1.3:
              required_status_checks:
                contexts: ["test-ubuntu-integration-release-1-3"]
            release-1.4:
              required_status_checks:
                contexts: ["test-ubuntu-e2e-integration-release-1-4"]
            release-1.5:
              required_status_checks:
                contexts: ["test-ubuntu-e2e-integration-release-1-5"]
        ironic-image:
          branches:
            main:
              required_status_checks:
                contexts: ["test-ubuntu-integration-main"]
        ironic-ipa-downloader:
          branches:
            main:
              required_status_checks:
                contexts: ["test-centos-integration-main"]
        ip-address-manager:
          branches:
            main:
              required_status_checks:
                contexts:
                  [
                    "test-centos-e2e-integration-main",
                    "test-ubuntu-integration-main",
                  ]
            release-1.3:
              required_status_checks:
                contexts: ["test-ubuntu-integration-release-1-3"]
            release-1.4:
              required_status_checks:
                contexts: ["test-ubuntu-e2e-integration-release-1-4"]
            release-1.5:
              required_status_checks:
                contexts: ["test-ubuntu-e2e-integration-release-1-5"]
        mariadb-image:
          branches:
            main:
              required_status_checks:
                contexts: ["test-ubuntu-integration-main"]
        metal3-dev-env:
          branches:
            main:
              required_status_checks:
                contexts:
                  [
                    "test-ubuntu-e2e-integration-main",
                    "test-centos-integration-release-1-5",
                  ]

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    lenses:
      - lens:
          name: metadata
        required_files:
          - started.json|finished.json
      - lens:
          config:
          name: buildlog
        required_files:
          - build-log.txt
      - lens:
          name: junit
        required_files:
          - .*/junit.*\.xml
      - lens:
          name: podinfo
        required_files:
          - podinfo.json

periodics:
  - name: periodic-stale
    interval: 1h
    decorate: true
    spec:
      containers:
        - image: gcr.io/k8s-prow/commenter:v20231011-33fbc60185
          command:
            - commenter
          args:
            - |-
              --query=org:metal3-io
              -label:lifecycle/frozen
              -label:lifecycle/stale
            - --updated=2160h
            - --token=/etc/token/token
            - |-
              --comment=Issues go stale after 90d of inactivity.
              Mark the issue as fresh with `/remove-lifecycle stale`.
              Stale issues will close after an additional 30d of inactivity.

              If this issue is safe to close now please do so with `/close`.

              /lifecycle stale
            - --template
            - --ceiling=10
            - --confirm
          volumeMounts:
            - name: token
              mountPath: /etc/token
      volumes:
        - name: token
          secret:
            secretName: github-token
  - name: periodic-stale-close
    interval: 1h
    decorate: true
    spec:
      containers:
        - image: gcr.io/k8s-prow/commenter:v20231011-33fbc60185
          command:
            - commenter
          args:
            - |-
              --query=org:metal3-io
              -label:lifecycle/frozen
              label:lifecycle/stale
            - --updated=720h
            - --token=/etc/token/token
            - |-
              --comment=Stale issues close after 30d of inactivity. Reopen the issue with `/reopen`. Mark the issue as fresh with `/remove-lifecycle stale`.

              /close
            - --template
            - --ceiling=10
            - --confirm
          volumeMounts:
            - name: token
              mountPath: /etc/token
      volumes:
        - name: token
          secret:
            secretName: github-token

presubmits:
  Nordix/metal3-clusterapi-docs:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
  Nordix/metal3-dev-tools:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./scripts/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
  Nordix/sles-ironic-python-agent-builder:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
  metal3-io/baremetal-operator:
    - name: gofmt
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gofmt.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: gosec
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gosec.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/securego/gosec:2.18.2@sha256:2f9daee1739765788945b79de7f46229f33fda5ed35127393d8a1e459f3a7577
            imagePullPolicy: Always
    - name: gomod
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gomod.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: unit
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/unit.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
              - name: DEPLOY_KERNEL_URL
                value: "http://172.22.0.1/images/ironic-python-agent.kernel"
              - name: DEPLOY_RAMDISK_URL
                value: "http://172.22.0.1/images/ironic-python-agent.initramfs"
              - name: IRONIC_ENDPOINT
                value: "http://localhost:6385/v1/"
              - name: IRONIC_INSPECTOR_ENDPOINT
                value: "http://localhost:5050/v1/"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: generate
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/generate.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
              - name: DEPLOY_KERNEL_URL
                value: "http://172.22.0.1/images/ironic-python-agent.kernel"
              - name: DEPLOY_RAMDISK_URL
                value: "http://172.22.0.1/images/ironic-python-agent.initramfs"
              - name: IRONIC_ENDPOINT
                value: "http://localhost:6385/v1/"
              - name: IRONIC_INSPECTOR_ENDPOINT
                value: "http://localhost:5050/v1/"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: golint
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/golint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: manifestlint
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/manifestlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
              - name: KUBECONFORM_PATH
                value: "/"
            image: ghcr.io/yannh/kubeconform:v0.6.2-alpine@sha256:49b5f6b320d30c1b8b72a7abdf02740ac9dc36a3ba23b934d1c02f7b37e6e740
            imagePullPolicy: Always

  metal3-io/cluster-api-provider-metal3:
    - name: gomod
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gomod.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: gomod
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gomod.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: gofmt
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gofmt.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: gofmt
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gofmt.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: gosec
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gosec.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/securego/gosec:2.14.0@sha256:73858f8b1b9b7372917677151ec6deeceeaa40c5b02753080bd647dede14e213
            imagePullPolicy: Always
    - name: test
      branches:
        - main
        - release-1.5
      run_if_changed: '^(Makefile|hack/.*)$'
      decorate: true
      spec:
        containers:
          - args:
              - test
            command:
              - make
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: golangci-lint
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/ensure-golangci-lint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: govet
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/govet.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: govet
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/govet.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: generate
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/codegen.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: generate
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/codegen.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: unit
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/unit.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: unit
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/unit.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: manifestlint
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/manifestlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
              - name: KUBECONFORM_PATH
                value: "/"
            image: ghcr.io/yannh/kubeconform:v0.6.2-alpine@sha256:49b5f6b320d30c1b8b72a7abdf02740ac9dc36a3ba23b934d1c02f7b37e6e740
            imagePullPolicy: Always
    - name: build
      branches:
        - main
        - release-1.5
      run_if_changed: '^api|^test|^Makefile$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/build.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: build
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/build.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always

  metal3-io/community:
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always

  metal3-io/metal3-dev-env:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always

  metal3-io/project-infra:
    - name: check-prow-config
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - image: gcr.io/k8s-prow/checkconfig:v20231011-33fbc60185
            command:
              - checkconfig
            args:
              - "--config-path"
              - "prow/manifests/overlays/metal3/config.yaml"
              - "--plugin-config"
              - "prow/manifests/overlays/metal3/plugins.yaml"
              - "--strict"
            resources:
              requests:
                memory: "500Mi"
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always

  metal3-io/metal3-docs:
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always

  metal3-io/ip-address-manager:
    - name: gomod
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gomod.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: gomod
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gomod.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: gosec
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gosec.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/securego/gosec:2.14.0@sha256:73858f8b1b9b7372917677151ec6deeceeaa40c5b02753080bd647dede14e213
            imagePullPolicy: Always
    - name: test
      branches:
        - main
        - release-1.5
      run_if_changed: '^(Makefile|hack/.*)$'
      decorate: true
      spec:
        containers:
          - args:
              - test
            command:
              - make
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: gofmt
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gofmt.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: gofmt
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/gofmt.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: golangci-lint
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/ensure-golangci-lint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: govet
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/govet.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: govet
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/govet.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: unit
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/unit.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
    - name: unit
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/unit.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
    - name: generate
      branches:
        - main
        - release-1.5
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/codegen.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.20
            imagePullPolicy: Always
    - name: generate
      branches:
        - release-1.3
        - release-1.4
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/codegen.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/golang:1.19
            imagePullPolicy: Always
    - name: manifestlint
      skip_if_only_changed: '(((^|/)OWNERS)|(\.md))$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/manifestlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
              - name: KUBECONFORM_PATH
                value: "/"
            image: ghcr.io/yannh/kubeconform:v0.6.2-alpine@sha256:49b5f6b320d30c1b8b72a7abdf02740ac9dc36a3ba23b934d1c02f7b37e6e740
            imagePullPolicy: Always

  metal3-io/ironic-ipa-downloader:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always

  metal3-io/ironic-image:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always

  metal3-io/mariadb-image:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always

  metal3-io/ironic-hardware-inventory-recorder-image:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always

  metal3-io/utility-images:
    - name: shellcheck
      run_if_changed: '((\.sh)|^Makefile)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/shellcheck.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/koalaman/shellcheck-alpine:v0.9.0@sha256:e19ed93c22423970d56568e171b4512c9244fc75dd9114045016b4a0073ac4b7
            imagePullPolicy: Always
    - name: markdownlint
      run_if_changed: '(\.md|markdownlint\.sh)$'
      decorate: true
      spec:
        containers:
          - args:
              - ./hack/markdownlint.sh
            command:
              - sh
            env:
              - name: IS_CONTAINER
                value: "TRUE"
            image: docker.io/pipelinecomponents/markdownlint:0.13.0@sha256:9c0cdfb64fd3f1d3bdc5181629b39c2e43b6a52fc9fdc146611e1860845bbae0
            imagePullPolicy: Always
