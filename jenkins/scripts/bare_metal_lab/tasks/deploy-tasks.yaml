- name: Start to capture log from virtual serial port
  shell:
    cmd: |
      mkdir -p "{{ serial_log_location }}"
      nohup /bin/bash <<EOF
      ssh -o "KexAlgorithms=diffie-hellman-group14-sha1" -o "HostKeyAlgorithms=+ssh-rsa" "{{ lookup('env', 'BML_ILO_USERNAME') }}"@{{ item.ip }}  'vsp' > "{{ serial_log_location }}/{{ item.ip }}.txt" &
      EOF
      exit 0
      EOT
  with_items: "{{ bare_metal_hosts }}"

- name: Add config file for metal3-dev-env
  copy:
    src: /tmp/vars.sh
    dest: "/home/{{ ansible_user_id }}/{{ metal3_dir }}/config_{{ ansible_user_id }}.sh"

- name: Install requirements for host
  shell:
    cmd: "make install_requirements"
    chdir: "/home/{{ ansible_user_id }}/{{ metal3_dir }}/"
  tags: install_requirements

- name: Configure host
  shell:
    cmd: "make configure_host"
    chdir: "/home/{{ ansible_user_id }}/{{ metal3_dir }}/"
  environment:
    NUM_NODES: 0
    CONTROL_PLANE_MACHINE_COUNT: 0
    WORKER_MACHINE_COUNT: 0

  # Allowing UDP forwarding allows minikube to use ipmitool (port 623) as
  # well as allowing TFTP traffic outside the host (random port)
- name: Add UDP forwarding to firewall
  iptables:
    action: append
    chain: FORWARD
    protocol: udp
    jump: ACCEPT
  become: true

- name: Launch management cluster
  shell:
    cmd: make launch_mgmt_cluster
    chdir: "/home/{{ ansible_user_id }}/{{ metal3_dir }}/"
  tags: launch_mgmt_cluster

- name: Add interface to provisioning bridge
  shell:
    cmd: "brctl addif provisioning eno1"
  become: true

- name: Deploy bmhosts
  template:
    src: "templates/bmhosts_crs.yaml.j2"
    dest: "/opt/metal3-dev-env/bmhosts_crs.yaml"

- name: Apply bmhosts manifest
  shell:
    cmd: kubectl apply -f ./bmhosts_crs.yaml -n metal3
    chdir: "/opt/metal3-dev-env/"
  tags: kubectl_apply

- name: Set VLAN 3 interface to be up
  shell:
    cmd: "ip link set up dev bmext"
  become: true
  tags: bmext

- name: Check if bmext interface has been added to bridge
  shell:
    cmd: "brctl show external | grep bmext"
  become: true
  failed_when: false
  changed_when: false
  register: brctl_grep_bmext
  tags: bmext

- name: Add VLAN 3 interface to external bridge
  shell:
    cmd: "brctl addif external bmext"
  become: true
  when: brctl_grep_bmext.rc != 0
  tags: bmext

- name: Wait until all BMHs become available .
  kubernetes.core.k8s_info:
    api_version: metal3.io/v1alpha1
    kind: BareMetalHost
    namespace: "metal3"
  register: available_bmh
  retries: 200
  delay: 30
  vars:
    query: "[? status.provisioning.state=='available']"
  until: (available_bmh is succeeded) and
        (available_bmh.resources | length > 0) and
        (available_bmh.resources | json_query(query) | length ==  (2))
